"

```python
import hashlib
import time

class Block:
    def __init__(self, index, previous_hash, timestamp, data, hash):
        self.index = index
        self.previous_hash = previous_hash
        self.timestamp = timestamp
        self.data = data
        self.hash = hash

def create_genesis_block():
    return Block(0, ""0"", time.time(), ""Genesis Block"", calculate_hash(0, ""0"", time.time(), ""Genesis Block""))

def calculate_hash(index, previous_hash, timestamp, data):
    return hashlib.sha256(f""{index}{previous_hash}{timestamp}{data}"".encode('utf-8')).hexdigest()

def create_new_block(previous_block, data):
    index = previous_block.index + 1
    timestamp = time.time()
    hash = calculate_hash(index, previous_block.hash, timestamp, data)
    return Block(index, previous_block.hash, timestamp, data, hash)

def display_blockchain(blockchain):
    print(""--------------- Blockchain ---------------"")
    for block in blockchain:
        print(f""Index: {block.index}"")
        print(f""Previous Hash: {block.previous_hash}"")
        print(f""Timestamp: {block.timestamp}"")
        print(f""Data: {block.data}"")
        print(f""Hash: {block.hash}"")
        print(""------------------------------------------\n"")


if __name__ == ""__main__"":
    blockchain = [create_genesis_block()]
    num_blocks_to_add = 5

    for i in range(num_blocks_to_add):
        new_block = create_new_block(blockchain[-1], f""Block {len(blockchain)}"")
        blockchain.append(new_block)

    display_blockchain(blockchain)
```
"
